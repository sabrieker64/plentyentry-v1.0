/*******************
    FLUID TYPO
********************/
@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

@mixin fluid-property($property, $min-vw, $max-vw, $min-property-size, $max-property-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-property-size);
  $u4: unit($max-property-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      #{$property}: $min-property-size;
      @media screen and (min-width: $min-vw) {
        #{$property}: calc(#{$min-property-size} + #{strip-unit($max-property-size - $min-property-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        #{$property}: $max-property-size;
      }
    }
  }
}

/*******************
    MEDIA QUERYS
********************/
@mixin media-breakpoint-up($name) {

  $min-width: map-get($breakpoints, $name);

  @if $min-width {

    @media (min-width: $min-width) {
      @content;
    }
  } @else {

    @content;
  }
}

@mixin media-breakpoint-down($name) {

  $max-width: map-get($breakpoints, $name);

  @if $max-width {

    @media (max-width: $max-width) {
      @content;
    }
  } @else {

    @content;
  }
}

@mixin media-breakpoint-between($name-min, $name-max) {

  $min-width: map-get($breakpoints, $name-min);
  $max-width: map-get($breakpoints, $name-max);

  @if $min-width != null and $max-width != null {

    @media (min-width: $min-width) and (max-width: $max-width) {

      @content;
    }
  } @else {

    @content;
  }
}
